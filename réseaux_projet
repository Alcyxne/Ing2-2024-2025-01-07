#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_SPECIES 10
#define MAX_RELATIONS 10

// Structure pour représenter une espèce
typedef struct {
    char name[50];             // Nom de l'espèce
    float biomass;             // Biomasse
    int eats[MAX_RELATIONS];   // Index des espèces que cette espèce mange
    int eatenBy[MAX_RELATIONS];// Index des espèces qui mangent cette espèce
    int eatCount;              // Nombre d'espèces qu'elle mange
    int eatenByCount;          // Nombre d'espèces qui la mangent
} Species;

// Initialiser une espèce
void initSpecies(Species *species, char *name, float biomass) {
    strcpy(species->name, name);
    species->biomass = biomass;
    species->eatCount = 0;
    species->eatenByCount = 0;
}

// Ajouter une interaction (prédation)
void addInteraction(Species species[], int prey, int predator) {
    species[predator].eats[species[predator].eatCount++] = prey;
    species[prey].eatenBy[species[prey].eatenByCount++] = predator;
}

// Afficher les informations sur une espèce spécifique
void displaySpeciesInfo(Species species[], int n, char *speciesName) {
    for (int i = 0; i < n; i++) {
        if (strcmp(species[i].name, speciesName) == 0) {
            printf("\nInformations sur l'espece : %s\n", species[i].name);
            printf("Biomasse : %.2f\n", species[i].biomass);

            // Liste des espèces qu'elle mange
            printf("Mange quoi : ");
            if (species[i].eatCount == 0) {
                printf("Aucun\n");
            } else {
                for (int j = 0; j < species[i].eatCount; j++) {
                    printf("%s ", species[species[i].eats[j]].name);
                }
                printf("\n");
            }

            // Liste des espèces qui la mangent
            printf("Mangee par : ");
            if (species[i].eatenByCount == 0) {
                printf("Aucun\n");
            } else {
                for (int j = 0; j < species[i].eatenByCount; j++) {
                    printf("%s ", species[species[i].eatenBy[j]].name);
                }
                printf("\n");
            }
            return;
        }
    }
    printf("\nEspece non trouvée : %s\n", speciesName);
}

int main() {
    // Initialisation des espèces
    int n = 10;
    Species species[MAX_SPECIES];
    initSpecies(&species[0], "Phytoplancton", 500);
    initSpecies(&species[1], "Zooplancton", 300);
    initSpecies(&species[2], "Algues", 400);
    initSpecies(&species[3], "Petit_poisson", 200);
    initSpecies(&species[4], "Grand_poisson", 100);
    initSpecies(&species[5], "Crustaces", 150);
    initSpecies(&species[6], "Oiseaux_marins", 50);
    initSpecies(&species[7], "Requin", 20);
    initSpecies(&species[8], "Dauphin", 30);
    initSpecies(&species[9], "Orque", 10);

    // Définir les interactions
    addInteraction(species, 0, 1); // Phytoplancton -> Zooplancton
    addInteraction(species, 0, 2); // Phytoplancton -> Algues
    addInteraction(species, 1, 3); // Zooplancton -> Petit poisson
    addInteraction(species, 2, 3); // Algues -> Petit poisson
    addInteraction(species, 3, 4); // Petit poisson -> Grand poisson
    addInteraction(species, 3, 5); // Petit poisson -> Crustacés
    addInteraction(species, 5, 6); // Crustacés -> Oiseaux marins
    addInteraction(species, 4, 7); // Grand poisson -> Requin
    addInteraction(species, 4, 8); // Grand poisson -> Dauphin
    addInteraction(species, 8, 9); // Dauphin -> Orque
    addInteraction(species, 7, 9); // Requin -> Orque

    // Interaction avec l'utilisateur
    char input[50];
    printf("Entrez le nom de l'espece pour obtenir ses informations (ou 'exit' pour quitter) : ");
    while (1) {
        scanf("%s", input);
        if (strcmp(input, "exit") == 0) {
            break;
        }
        displaySpeciesInfo(species, n, input);
        printf("\nEntrez un autre nom d'espece (ou 'exit' pour quitter) : ");
    }

    return 0;
}
